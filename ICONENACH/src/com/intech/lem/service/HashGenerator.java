package com.intech.lem.service;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ResourceBundle;



public class HashGenerator {
	
    //static String password = "secret1234";


	 public static String getSHA(String input) throws NoSuchAlgorithmException
	    { 

		 // Static getInstance method is called with hashing SHA 
	        MessageDigest md = MessageDigest.getInstance("SHA-256"); 
	
	        ResourceBundle rsBundle = ResourceBundle.getBundle("EMApplication");
	    	String password = rsBundle.getString("HSALT");
	     // Generate the random salt
            /*SecureRandom random = new SecureRandom();
            byte[] salt = new byte[16];
            random.nextBytes(salt);
            md.update(salt);*/

         // Generate the salted hash
            byte[] hashedPassword = md.digest((input).getBytes());            
            
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedPassword)
                sb.append(String.format("%02x", b));
            	System.out.println(sb);            
            
	        // digest() method called 
	        // to calculate message digest of an input 
	        // and return array of byte
	        //return toHexString(hashedPassword);
	        return new String(sb).toUpperCase();///md.digest(input.getBytes(StandardCharsets.UTF_8)); 
	    }
	    
	    public static String toHexString(byte[] hash)
	    {
	        // Convert byte array into signum representation 
	        BigInteger number = new BigInteger(1, hash); 
	  
	        // Convert message digest into hex value 
	        StringBuilder hexString = new StringBuilder(number.toString(16)); 
	  

       
	        while (hexString.length() < 32) 
	        { 
	            hexString.insert(0, '0'); 
	        } 
	  
	        return hexString.toString(); 
	    }
	  
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try 
        {
            System.out.println("HashCode Generated by SHA-256 for:"); 
  
            String s1 = "T642899|AL00001000000005|1|12345678|11111|9640547478|PRSDD9@GMAIL.COM|10-05-2021|10-05-2022|1000|M|ADHO|||||7968395179MSMRYY"; 
            System.out.println(getSHA(s1));
           
        }
        // For specifying wrong message digest algorithms 
        catch (Exception  e) { 
            System.out.println("Exception thrown for incorrect algorithm: " + e); 
            e.printStackTrace(System.out);
        } 
	}

}
